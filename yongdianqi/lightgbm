import pandas as pd
from lightgbm import LGBMClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report

# 读取CSV文件
df = pd.read_csv('/kaggle/input/combined-modified-files/combined_modified_files.csv')

# 提取输入特征和输出特征
X = df.iloc[:, :1026].values
y = df.iloc[:, 1026].values

# 划分训练集和测试集
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 数据预处理：标准化
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# 特征选择：使用LightGBM的特征重要性
lgbc = LGBMClassifier(n_estimators=100, random_state=42)  # 使用默认参数或指定参数
lgbc.fit(X_train_scaled, y_train)

# 使用SelectFromModel来选择特征
selector = SelectFromModel(lgbc, threshold='median')  # 选择重要性中位数的特征
X_train_selected = selector.transform(X_train_scaled)
X_test_selected = selector.transform(X_test_scaled)

# 设置参数
params = {
    'boosting_type': 'gbdt',
    'objective': 'regression',
    'metric': 'rmse',
    'verbosity': -1,  # 设置verbosity为-1，以隐藏警告信息
}

# 使用选择的特征重新训练LightGBM模型
lgbc.fit(X_train_selected, y_train)

# 评估模型
y_pred = lgbc.predict(X_test_selected)
print(classification_report(y_test, y_pred))
